// Generated by view binder compiler. Do not edit!
package com.example.Child_App.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.example.Child_App.R;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CameraScopeLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton btnZoom;

  @NonNull
  public final ViewPager2 cameraScopeContainer;

  @NonNull
  public final RelativeLayout cameraScopeContent;

  @NonNull
  public final TabLayout dots;

  private CameraScopeLayoutBinding(@NonNull RelativeLayout rootView, @NonNull ImageButton btnZoom,
      @NonNull ViewPager2 cameraScopeContainer, @NonNull RelativeLayout cameraScopeContent,
      @NonNull TabLayout dots) {
    this.rootView = rootView;
    this.btnZoom = btnZoom;
    this.cameraScopeContainer = cameraScopeContainer;
    this.cameraScopeContent = cameraScopeContent;
    this.dots = dots;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CameraScopeLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CameraScopeLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.camera_scope_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CameraScopeLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnZoom;
      ImageButton btnZoom = ViewBindings.findChildViewById(rootView, id);
      if (btnZoom == null) {
        break missingId;
      }

      id = R.id.cameraScopeContainer;
      ViewPager2 cameraScopeContainer = ViewBindings.findChildViewById(rootView, id);
      if (cameraScopeContainer == null) {
        break missingId;
      }

      RelativeLayout cameraScopeContent = (RelativeLayout) rootView;

      id = R.id.dots;
      TabLayout dots = ViewBindings.findChildViewById(rootView, id);
      if (dots == null) {
        break missingId;
      }

      return new CameraScopeLayoutBinding((RelativeLayout) rootView, btnZoom, cameraScopeContainer,
          cameraScopeContent, dots);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
